---
- name: Check if Neovim is installed
  ansible.builtin.command: nvim --version
  register: nvim_check
  ignore_errors: true
  changed_when: false

- name: Neovim installation and setup
  block:
    - name: Remove existing Neovim clone
      ansible.builtin.file:
        path: /tmp/neovim
        state: absent

    - name: Clone Neovim repository
      ansible.builtin.git:
        repo: "https://github.com/neovim/neovim"
        dest: /tmp/neovim
        version: master

    - name: Install nvim build dependencies in Ubuntu
      become: true
      apt:
        name:
          - ninja-build
          - gettext
          - libtool
          - libtool-bin
          - autoconf
          - automake
          - cmake
          - g++
          - pkg-config
          - unzip
          - curl
          - doxygen
        state: present

    - name: Build nvim release version in Linux
      community.general.make:
        chdir: /tmp/neovim
        params:
          CMAKE_BUILD_TYPE: Release

    - name: Install nvim release version in Linux
      become: true
      community.general.make:
        chdir: /tmp/neovim
        target: install

  when: nvim_check.rc != 0

- name: Cleanup tasks for existing Neovim installation
  block:
    - name: Get VIMRUNTIME path
      shell:
        cmd: nvim --headless -c 'echo $VIMRUNTIME' -c quit
      register: nvim_vimruntime
      changed_when: false

    - name: Check if previous build exists
      ansible.builtin.stat:
        path: /tmp/neovim/build
      register: nvim_build

    - name: Uninstall previous installation of nvim
      become: true
      ansible.builtin.command:
        chdir: /tmp/neovim
        cmd: cmake --build build/ --target uninstall
      when: nvim_build.stat.exists

    - name: Delete previous installation VIMRUNTIME path
      become: true
      file:
        path: "{{ nvim_vimruntime.stderr }}"
        state: absent
      when: nvim_vimruntime is defined

  when: nvim_check.rc == 0
